import javax.swing.*;
import java.util.*;
import java.awt.*;
import java.util.concurrent.ThreadLocalRandom;

public class Wolf extends LivingThing{
	 private final ImageIcon image = new ImageIcon("bin/wolf.gif"); 

	    protected Point position;

	    protected Pasture pasture;
	    
	    public Wolf(Pasture pasture, Point position) {
	    	this.pasture   = pasture;
	    	this.position  = position;
	    	this.type = "wolf"; 
	    }
	
	public void tick() {
		setPosition(new Point((int)getPosition().getX() + ThreadLocalRandom.current().nextInt(-1, 1 + 1),(int)getPosition().getY() + ThreadLocalRandom.current().nextInt(-1, 1 + 1)));    	 
	}
	
	public void setPosition(Point newPosition) { 
	    //If the new position is inside the borders the dummy will move
	    if(newPosition.x >= 0  && newPosition.x < this.pasture.getWidth() && newPosition.y >= 0  && newPosition.y < this.pasture.getHeight()){
	    	Collection world = this.pasture.getEntities();
	    	Iterator it = world.iterator();
	    	
	    	boolean grass = false;
	    	while(it.hasNext()){
	    		Entity e = (Entity) it.next();
	    		if(e.getPosition().getX() == newPosition.getX() && e.getPosition().getY() == newPosition.getY()){
	    			if(e.getType().equals("sheep")){
	    				grass = true;
	    			}    			
	    		}
	    		if(grass){
	    			this.pasture.removeEntity(e);
	    			grass = false;
	    		}
	    		
	    	}
	    	
	    	
	    	position = newPosition;  //Sets the current position equal to the new position
	    }
	    
	 }
	
	  
    public String getType() {
    	return this.type;
    }
    
    public ImageIcon getImage() { 
    	return image; 
    }

    public Point getPosition() {
		return position;
	}


    public void moveToClosestGrass(){
    	Point plantPosition = null; //Keeps track of the position of the latest grass
    	Point newPosition = position;  //The new position for the dummy
    	Point closestPlantPos = position; //The closest grass
    	
    	Collection world = this.pasture.getEntities();
    	Iterator it = world.iterator();
    	int plantNumber = 0; 
    	
    	//Loops through all the entities
    	while(it.hasNext()){
    		plantNumber++; 
    		
    		Entity e = (Entity) it.next();
    		
    		//If the entity is grass 
    		if(e.getType().equals("sheep")){
    			//Gets the plants position
    			plantPosition = e.getPosition();
    			
    			//If it is the first plant the closest position is the first plants position
    			if(plantNumber == 1){
        			closestPlantPos = plantPosition; 
        		}else{
        			if(checkDistance(this.position, plantPosition) < checkDistance(this.position, closestPlantPos)){
        				closestPlantPos = plantPosition; 
        				
        			}
        		}
    		
    		}
    	}
    	
    	if(closestPlantPos.getX() < position.getX())
    		newPosition.x = (int) (position.getX() - 1); 
    	else if(closestPlantPos.getX() > position.getX())
    		newPosition.x = (int) (position.getX() +1);
    	
    	if(closestPlantPos.getY() < position.getY())
    		newPosition.y = (int) (position.getY() - 1); 
    	else if(closestPlantPos.getY() > position.getY())
    		newPosition.y = (int) (position.getY() +1);
    	
    	
    	setPosition(new Point(newPosition));
    	
    	
    	
    }
}
