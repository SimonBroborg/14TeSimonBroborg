import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.ArrayList;
import java.util.concurrent.ThreadLocalRandom;

import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class Client {

	static BufferedReader in;
	static PrintWriter out;
	JFrame frame = new JFrame("Chatter");
	JTextField textField = new JTextField(40);
	JTextArea messageArea = new JTextArea(8, 40);
	
	static int snakeNr;
	float x, y;
	static int angle; 
	static String dataSnakeNr;
	static String dataAngle; 
	String serverAddress; 
	int snakes; 

	public Client(String serverAddress) {
		this.serverAddress = serverAddress; 
	}

	private void run() throws IOException {

		// Make connection and initialize streams  
		Socket socket = new Socket(serverAddress, 6666);
		in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
		out = new PrintWriter(socket.getOutputStream(), true);
		
		
		String input = in.readLine();
		snakeNr = Integer.parseInt(input.substring(0,1));
		angle = Integer.parseInt(input.substring(1,input.length() -1));
		System.out.println(angle);
	}

	public static void main(String[] args) throws Exception {
		Client client = new Client("192.168.0.10");
		client.run();

		Game game = new Game();
		StringBuilder stringBuilder = new StringBuilder();
		
		JFrame frame = new JFrame("Achtung die kurve");
		frame.setVisible(true);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(640, 480);
		frame.getContentPane().setBackground(Color.WHITE);
		frame.add(game);
		boolean go = false;
		int snakes = 0; 
		while(!go){
			String startGame = client.in.readLine();
			System.out.println(startGame); 
			if(startGame.startsWith("GO")){
				go = true; 
				snakes = Integer.parseInt(startGame.substring(startGame.length()-1));
			}
		}

		for(int i = 0; i < snakes; i++){
			game.addSnake(ThreadLocalRandom.current().nextInt(0, 360 + 1),ThreadLocalRandom.current().nextInt(0, 360 + 1),angle);
		}
		System.out.println("HAAUSAD");
		
		
		
		//Checks input from the player and moves the clients snake accordingly
		frame.addKeyListener(new KeyListener() {

			@Override
			public void keyPressed(KeyEvent e) {
				// TODO Auto-generated method stub
				game.snakes.get(client.snakeNr-1).keyPressed(e);
				
			}

			@Override
			public void keyReleased(KeyEvent e) {
				// TODO Auto-generated method stub
				game.snakes.get(client.snakeNr-1).keyReleased(e);
			}

			@Override
			public void keyTyped(KeyEvent e) {
				// TODO Auto-generated method stub
			}

		});

		while (true) {
			game.update();	
			
			stringBuilder.append(client.snakeNr-1);
			stringBuilder.append(String.format("%03d",(int) game.snakes.get(client.snakeNr -1).angle));
			stringBuilder.append(String.format("%03d", (int)game.snakes.get(client.snakeNr -1).y));
			out.println(stringBuilder.toString()); 	
			
			String text = in.readLine();
			game.snakes.get(Integer.parseInt(text.substring(0,1))).x = Integer.parseInt(text.substring(1, 3));
			game.snakes.get(Integer.parseInt(text.substring(0,1))).y = Integer.parseInt(text.substring(4, 7));
			System.out.println(Integer.parseInt(text.substring(1,3))); 
			
			game.repaint();			
			stringBuilder.setLength(0);
			
			try {
				Thread.sleep(10);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}

	}

}
