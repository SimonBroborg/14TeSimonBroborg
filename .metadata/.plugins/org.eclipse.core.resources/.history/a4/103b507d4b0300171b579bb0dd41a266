import javax.swing.*;
import java.util.*;
import java.awt.*;
import java.util.concurrent.ThreadLocalRandom;


abstract class LivingThing implements Entity{

	protected Point position; 
	
	protected ImageIcon image = new ImageIcon("bin/unknown.gif"); 
	
	protected Pasture pasture; 
	
	public String type; 
	
	public LivingThing(){
		
	}
	 public Point getPosition() {
		return position;
	}

	 public void setPosition(Point newPosition) { 
	    //If the new position is inside the borders the dummy will move
	    if(newPosition.x > 0  && newPosition.x < this.pasture.getWidth() && 
	    		newPosition.y > 0  && newPosition.y < this.pasture.getHeight()){
	    	position = newPosition;  //Sets the current position equal to the new position
	    }
	 }
	 
	 public ImageIcon getImage(){
		 return image;
	 }
	 
	 public String getType(){
		 return type; 
	 }
	 
	 public float checkDistance(Point a, Point b){
		 float distance = 0;
		 
		 distance = (float) Math.sqrt( (Math.pow(b.getX() - a.getX(), 2)+ Math.pow( b.getY() - a.getY(),2)));
		 
		 return distance; 
	 }
	 
	 public void moveToClosestGrass(){
	    	Point plantPosition = null; //Keeps track of the position of the latest grass
	    	Point newPosition = position;  //The new position for the dummy
	    	Point closestPlantPos = position; //The closest grass
	    	
	    	Collection world = this.pasture.getEntities();
	    	Iterator it = world.iterator();
	    	int plantNumber = 0; 
	    	
	    	//Loops through all the entities
	    	while(it.hasNext()){
	    		plantNumber++; 
	    		
	    		Entity e = (Entity) it.next();
	    		
	    		//If the entity is grass 
	    		if(e.getType().equals("plant")){
	    			//Gets the plants position
	    			plantPosition = e.getPosition();
	    			
	    			//If it is the first plant the closest position is the first plants position
	    			if(plantNumber == 1){
	        			closestPlantPos = plantPosition; 
	        		}else{
	        			if(checkDistance(this.position, plantPosition) < checkDistance(this.position, closestPlantPos)){
	        				closestPlantPos = plantPosition; 
	        				
	        			}
	        		}
	    		
	    		}
	    	}
	    	
	    	if(closestPlantPos.getX() < position.getX())
	    		newPosition.x = (int) (position.getX() - 1); 
	    	else if(closestPlantPos.getX() > position.getX())
	    		newPosition.x = (int) (position.getX() +1);
	    	
	    	if(closestPlantPos.getY() < position.getY())
	    		newPosition.y = (int) (position.getY() - 1); 
	    	else if(closestPlantPos.getY() > position.getY())
	    		newPosition.y = (int) (position.getY() +1);
	    	
	    	
	    	setPosition(new Point(newPosition));
	    	    	
	    }
	    
	
	
}
