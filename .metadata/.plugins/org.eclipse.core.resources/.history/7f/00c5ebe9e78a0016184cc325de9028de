import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
public class Ball {
	
	private int d = 30;
	private int posX, startX, startMoveX;
	private int posY, startY, startMoveY;
	private int moveX, moveY, speed = 2;
	private BallGame game;
	private Racket racket;
	private Racket racket2;
	private int collissionCounter = 0;
	private int ballNumber;
	private BufferedImage image;
	
	public Ball(BallGame game, int ballNr, int x, int y, int beginMoveX, int beginMoveY, String path){
		this.game = game;
		
		startX = posX = x;
		startY = posY = y;
		startMoveX = moveX = beginMoveX;
		startMoveY = moveY = beginMoveY;
		ballNumber = ballNr;
		try {
			image = ImageIO.read(new File("Per1.jpg"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
		}
	}
		
	void moveBall(){
		
			if(posX + moveX < 0)
				game.gameOver();
			
			if(posX + moveX > game.getWidth() - d )
				game.gameOver();
			if(posY + moveY > game.getHeight() - d)
				moveY = -2;
				//game.gameOver();
			if(posY + moveY < 0)
				moveY = 2;
			
			if(collission()){
				collissionCounter++;
					
					moveX = -moveX;
					moveY = game.racket.getMoveY();
					
					if(collissionCounter == 3)
					{
						moveX = -moveX;
					}
				
			}
			if(collission2()){
				collissionCounter++;

					moveX = -moveX;
					moveY = (game.racket2.getMoveY());
					
					if(collissionCounter >= 3)
					{
						moveX = -moveX;
					}
				
				
			}
			
			if(collissionBall()){
				moveX = -moveX;
				moveY = -moveY;
			}
			posX += moveX;
			posY += moveY;
					
	}
	
	
	public void paint(Graphics2D g){
		//g.fillOval(posX, posY, d, d);
		g.drawImage(image, posX, posY, null);
	}
	
	private Rectangle getBounds(){
		return new Rectangle(posX, posY, d, d);
	}
	
	public boolean collission(){
		return game.racket.getBounds().intersects(getBounds());
	}
	public boolean collission2(){
		return game.racket2.getBounds().intersects(getBounds());
	}
	
	public boolean collissionBall(){
		if(ballNumber == 1)
		return game.ball2.getBounds().intersects(getBounds());
		
		else if(ballNumber == 2)
			return game.ball.getBounds().intersects(getBounds());
		else
			return false;
	}

	public void restart(){
		posX = startX;
		posY = startY;
		moveX = startMoveX;
		moveY = startMoveY;
	}
}

